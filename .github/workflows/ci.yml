name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install specific PyTorch version with CUDA or CPU
        pip install torch==2.0.1 --extra-index-url https://download.pytorch.org/whl/cpu
        # Then install torch-geometric with pre-built wheels
        pip install torch-scatter torch-sparse torch-cluster torch-spline-conv -f https://data.pyg.org/whl/torch-2.0.1+cpu.html
        pip install torch-geometric
        # Install remaining requirements
        pip install -r requirements.txt

    - name: Run tests
      run: |
        python -m pytest tests/ -v --tb=short

    - name: Check code style
      run: |
        pip install flake8
        flake8 src/ --max-line-length=127 --show-source

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install linting tools
      run: |
        pip install flake8 black isort

    - name: Check code style with flake8
      run: |
        flake8 src/ tests/ --max-line-length=127 --show-source

    - name: Check formatting with black
      run: |
        black --check src/ tests/

    - name: Check import sorting with isort
      run: |
        isort --check-only src/ tests/
